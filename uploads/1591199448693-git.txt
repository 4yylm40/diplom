kirillovmi
m89290162770

HEAD - текущий коммит
git commit - создать коммит
git branch branchName - создать новую ветку
git checkout branchName - перейти на ветку branchName
git checkout -b brachName - создать ветку и переключиться на нее
git merge branchName - слияние ветки с веткой branchName
git rebase branchName - ребейз ветки. Сдвиг изменений текущей ветки на вершину branchName
git checkout branchName^ - перемещение на один коммит назад в ветке brachName
git checkout branchName~num - перемещение на num коммитов назад в ветке branchName
git branch -f branchName branchName~num - принудительно переместить ветку branchName на num родителя назад от HEAD
git reset branchName~1 - отменяет изменения. Перенесет ветку назад, как будто некоторых коммитов не было
git revert branchName - отменяет изменения и делится изменениями с остальными на удаленных ветках. После revert можно сделать push и поделиться изменениями с остальными
git cherry-pick Commit1 Commit2 ... - копировать указанное количество коммитов на место текущего коммита (HEAD). Выводятся после HEAD
git rebase -i HEAD~4 - интерактивный ребейз
git tag v1 Commit1 - создает тег под названием v1 на Commit1
git describe ref - добавляет описание коммиту. ref это что-либо, что указывает на конкретный коммит. Если не указать ref, то git будет считать, что указано текущее положение (HEAD)
git tag_numCommits_ghash - вывод команды. tag - ближайший тег в истории изменений, numCommits - это насколько далеко мы от этого тега, hash - это хеш коммита, который описывается
git clone - создает удаленный репозиторий проекта
git fetch - скачивание коммитов с удаленного репозитория в локальный
git pull - скачивает и мерджит ветки с удаленного репозитория на локальный
git push - отправляет и мерджит ветки с локального репозитрория на удаленный
git pull --rebase - скачивает коммиты с удаленного репозитория и ребейзит с проектом удаленного репозитория